<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <link href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css" rel="stylesheet" />
    <title>Resultado LCS</title>
</head>

<body>
    <main class="container">
        <h1>RESULTADO</h1>

        <p><strong>String 1:</strong> <code><%= dataOne %></code></p>
        <p><strong>String 2:</strong> <code><%= dataTwo %></code></p>

        <h3>Subsequências comuns mais longas</h3>
        <ul>
            <% sequences.forEach(seq=> { %>
                <li><code><%= seq %></code></li>
                <% }) %>
        </ul>

        <h3>Tabela resultante da Programação Dinâmica</h3>
        <p>
            Cada número na tabela <code>dp[i][j]</code> representa o comprimento da maior subsequência comum (LCS) entre
            os prefixos <code>data_one[0:i]</code> e <code>data_two[0:j]</code>. Se os caracteres nas posições atuais
            coincidirem, o valor é incrementado com base na diagonal anterior; caso contrário, herda o maior valor entre
            a célula acima e à esquerda. Essa tabela guia o processo de reconstrução das subsequências comuns mais
            longas.
        </p>

        <table>
            <thead>
                <tr>
                    <th></th>
                    <th></th>
                    <% for (let j=0; j < dataTwo.length; j++) { %>
                        <th>
                            <%= dataTwo[j] %>
                        </th>
                        <% } %>
                </tr>
            </thead>
            <tbody>
                <% for (let i=0; i < dp.length; i++) { %>
                    <tr>
                        <th>
                            <% if (i> 0) { %>
                                <%= dataOne[i - 1] %>
                                    <% } %>
                        </th>
                        <% for (let j=0; j < dp[i].length; j++) { %>
                            <td>
                                <%= dp[i][j] %>
                            </td>
                            <% } %>
                    </tr>
                    <% } %>
            </tbody>
        </table>

        <h2>Visualização do Backtracking</h2>
        <p>Cada caminho representa como uma subsequência comum foi construída a partir da tabela.</p>

        <% sequences.forEach((seq, index)=> { %>
            <details>
                <summary><strong>Sequência #<%= index + 1 %>: "<%= seq %>"</strong></summary>
                <ul>
                    <% let i=dp.length - 1, j=dp[0].length - 1, s=seq.split('').reverse(); %>
                        <% while (s.length> 0 && i > 0 && j > 0) { %>
                            <% if (dataOne[i - 1]===dataTwo[j - 1] && s[0]===dataOne[i - 1]) { %>
                                <li><strong>Match</strong> em dp[<%= i %>][<%= j %>] → char: "<%= dataOne[i - 1] %>"
                                </li>
                                <% s.shift(); i--; j--; %>
                                    <% } else if (dp[i - 1][j]>= dp[i][j - 1]) { %>
                                        <li>⬆ Subir para dp[<%= i - 1 %>][<%= j %>]</li>
                                        <% i--; %>
                                            <% } else { %>
                                                <li>⬅ Esquerda para dp[<%= i %>][<%= j - 1 %>]</li>
                                                <% j--; %>
                                                    <% } %>
                                                        <% } %>
                </ul>
            </details>
            <% }) %>


                <a href="/">← Voltar</a>
    </main>
</body>

</html>