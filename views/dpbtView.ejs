<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <link href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css" rel="stylesheet" />
    <title>Resultado LCS</title>
</head>

<body>
    <main class="container">
        <h1>LCS - Programação Dinâmica + Backtracking</h1>

        <% results.forEach((result, pairIndex)=> { %>
            <article>
                <header>
                    <h2>Par de Dados #<%= pairIndex + 1 %>
                    </h2>
                </header>

                <p><strong>1º Conjunto:</strong> <code><%= result.dataOne %></code></p>
                <p><strong>2º Conjunto:</strong> <code><%= result.dataTwo %></code></p>

                <h3>Subsequências comuns mais longas</h3>
                <ul>
                    <% result.sequences.forEach(seq=> { %>
                        <li><code><%= seq %></code></li>
                        <% }) %>
                </ul>

                <h3>Tabela resultante da Programação Dinâmica</h3>
                <p>
                    Cada número na tabela <code>dp[i][j]</code> representa o comprimento da maior subsequência comum
                    (LCS) entre
                    os prefixos <code>data_one[0:i]</code> e <code>data_two[0:j]</code>. Se os caracteres nas posições
                    atuais
                    coincidirem, o valor é incrementado com base na diagonal anterior; caso contrário, herda o maior
                    valor entre
                    a célula acima e à esquerda. Essa tabela guia o processo de reconstrução das subsequências comuns
                    mais
                    longas.
                </p>

                <table>
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                            <% for (let j=0; j < result.dataTwo.length; j++) { %>
                                <th>
                                    <%= result.dataTwo[j] %>
                                </th>
                                <% } %>
                        </tr>
                    </thead>
                    <tbody>
                        <% for (let i=0; i < result.dp.length; i++) { %>
                            <tr>
                                <th>
                                    <% if (i> 0) { %><%= result.dataOne[i - 1] %>
                                            <% } %>
                                </th>
                                <% for (let j=0; j < result.dp[i].length; j++) { %>
                                    <td>
                                        <%= result.dp[i][j] %>
                                    </td>
                                    <% } %>
                            </tr>
                            <% } %>
                    </tbody>
                </table>

                <h2>Visualização do Backtracking</h2>
                <p>Cada caminho representa como uma subsequência comum foi construída a partir da tabela.</p>

                <% result.sequences.forEach((seq, index)=> { %>
                    <details>
                        <summary><strong>Sequência #<%= index + 1 %>: "<%= seq %>"</strong></summary>
                        <ul>
                            <% let i=result.dp.length - 1, j=result.dp[0].length - 1, s=seq.split('').reverse(); %>
                                <% while (s.length> 0 && i > 0 && j > 0) { %>
                                    <% if (result.dataOne[i - 1]===result.dataTwo[j - 1] && s[0]===result.dataOne[i -
                                        1]) { %>
                                        <li><strong>Match</strong> em dp[<%= i %>][<%= j %>] → char: "<%=
                                                        result.dataOne[i - 1] %>"</li>
                                        <% s.shift(); i--; j--; %>
                                            <% } else if (result.dp[i - 1][j]>= result.dp[i][j - 1]) { %>
                                                <li>⬆ Subir para dp[<%= i - 1 %>][<%= j %>]</li>
                                                <% i--; %>
                                                    <% } else { %>
                                                        <li>⬅ Esquerda para dp[<%= i %>][<%= j - 1 %>]</li>
                                                        <% j--; %>
                                                            <% } %>
                                                                <% } %>
                        </ul>
                    </details>
                    <% }) %>

            </article>

            <% if (pairIndex < results.length - 1) { %>
                <hr>
                <% } %>

                    <% }) %>

                        <a href="/" role="button">← Voltar</a>
    </main>
</body>

</html>